name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Checkout Pyramid-Scheme
      run: git submodule update --init # --recursive

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6

    - name: Set up Python 3.9.16
      uses: actions/setup-python@v4
      with:
        python-version: '3.9.16'

    - name: Install test dependencies
      run: |
        pip install --upgrade pip wheel setuptools
        pip install --upgrade coverage pytest black mypy

    - name: Install psll
      run: pip install .

    - name: Check with black
      run: black --preview --check --verbose .
    
    - name: Check with mypy
      run: mypy --config-file ./mypy.ini psll

    - name: Run tests
      if: github.event_name == 'pull_request'
      run: bash test.sh -e

    # ON COMMIT ONLY (as opposed to a PR)

    - name: Run tests and coverage
      if: github.event_name != 'pull_request'
      run: bash test.sh -e -c 

    - name: Push to coveralls
      if: github.event_name != 'pull_request'
      run: |
        pip install --upgrade coveralls
        coveralls --service=github

    - name: Run performance check
      run: python ./perf/perf_ascii_trees.py result.perf && cat result.perf

    - name: Checkout psll-perf branch
      if: github.event_name != 'pull_request'
      uses: actions/checkout@v3
      with:
        ref: psll-perf
        path: temp-perf

    - name: Append performance data
      if: github.event_name != 'pull_request'
      run: |
        cd ./temp-perf
        cat ../result.perf | tail -n +2 | awk -v sha=$GITHUB_SHA '{ f = "./data/" $1 ".data"; $1 = sha; print >> f }'

    - name: Push to psll-perf
      if: github.event_name != 'pull_request'
      run: |
        cd ./temp-perf
        git status
        git config user.name github-actions
        git config user.email github-actions@github.com
        git commit -a -m "Automated report"
        git push
    
    - name: Build and publish
      if: github.event_name != 'pull_request'
      run: |
        python -m pip install build twine
        python -m build
        twine check dist/*
        twine upload --username $TEST_PYPI_USERNAME --password $TEST_PYPI_PASSWORD dist/*
